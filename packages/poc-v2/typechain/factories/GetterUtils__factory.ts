/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GetterUtils } from "../GetterUtils";

export class GetterUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    api3TokenAddress: string,
    overrides?: Overrides
  ): Promise<GetterUtils> {
    return super.deploy(
      api3TokenAddress,
      overrides || {}
    ) as Promise<GetterUtils>;
  }
  getDeployTransaction(
    api3TokenAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(api3TokenAddress, overrides || {});
  }
  attach(address: string): GetterUtils {
    return super.attach(address) as GetterUtils;
  }
  connect(signer: Signer): GetterUtils__factory {
    return super.connect(signer) as GetterUtils__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GetterUtils {
    return new Contract(address, _abi, signerOrProvider) as GetterUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "api3TokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newApr",
        type: "uint256",
      },
    ],
    name: "Epoch",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "genesisEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetEpoch",
        type: "uint256",
      },
    ],
    name: "getCurrentUserLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "bool",
        name: "paid",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "atBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
    ],
    name: "totalStakeAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeWaitPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateCoeff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetEpoch",
        type: "uint256",
      },
    ],
    name: "updateUserLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "unstaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeScheduledFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateEpoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052622625a060055563047868c06006556a084595161401484a000000600755620f424060085562093a80600955600554600a553480156200004357600080fd5b506040516200195d3803806200195d833981810160405260208110156200006957600080fd5b810190808051906020019092919050505080600260405180604001604052804381526020016001815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600360405180604001604052804381526020016001815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200018662093a80426200019560201b62000c461790919060201c565b608081815250505050620002b2565b6000620001df83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250620001e760201b60201c565b905092915050565b6000808311829062000297576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200025b5780820151818401526020810190506200023e565b50505050905090810190601f168015620002895780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581620002a457fe5b049050809150509392505050565b608051611686620002d76000398061075952806107945280610be252506116866000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806370a08231116100b8578063a87430ba1161007c578063a87430ba1461045d578063b6ca9563146104d1578063b70e6be61461051f578063decac4f51461053d578063e7460a521461055b578063f301af421461057957610136565b806370a0823114610369578063784b3c5d146103c15780638b0e9f3f146103df57806392093b36146103fd578063981b24d01461041b57610136565b8063276e0058116100ff578063276e00581461024057806341cb8c20146102825780634eb05c47146102cb5780634f322ae8146102e9578063548975771461030757610136565b806201e8621461013b578063106644131461019d57806313f2dad0146101bb57806318160ddd1461020457806320a0a0e914610222575b600080fd5b6101876004803603604081101561015157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105cb565b6040518082815260200191505060405180910390f35b6101a5610620565b6040518082815260200191505060405180910390f35b6101e7600480360360208110156101d157600080fd5b8101908080359060200190929190505050610626565b604051808381526020018281526020019250505060405180910390f35b61020c610657565b6040518082815260200191505060405180910390f35b61022a610667565b6040518082815260200191505060405180910390f35b61026c6004803603602081101561025657600080fd5b810190808035906020019092919050505061066e565b6040518082815260200191505060405180910390f35b6102ae6004803603602081101561029857600080fd5b8101908080359060200190929190505050610682565b604051808381526020018281526020019250505060405180910390f35b6102d36106b3565b6040518082815260200191505060405180910390f35b6102f16106b9565b6040518082815260200191505060405180910390f35b6103536004803603604081101561031d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106bf565b6040518082815260200191505060405180910390f35b6103ab6004803603602081101561037f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e0565b6040518082815260200191505060405180910390f35b6103c96109f3565b6040518082815260200191505060405180910390f35b6103e76109f9565b6040518082815260200191505060405180910390f35b610405610a09565b6040518082815260200191505060405180910390f35b6104476004803603602081101561043157600080fd5b8101908080359060200190929190505050610a0f565b6040518082815260200191505060405180910390f35b61049f6004803603602081101561047357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a23565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b61051d600480360360408110156104e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a59565b005b610527610be0565b6040518082815260200191505060405180910390f35b610545610c04565b6040518082815260200191505060405180910390f35b610563610c09565b6040518082815260200191505060405180910390f35b6105a56004803603602081101561058f57600080fd5b8101908080359060200190929190505050610c0f565b604051808415158152602001838152602001828152602001935050505060405180910390f35b6000610618600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010184610c90565b905092915050565b60085481565b6002818154811061063357fe5b90600052602060002090600202016000915090508060000154908060010154905082565b600061066243610a0f565b905090565b62093a8081565b600061067b600383610c90565b9050919050565b6003818154811061068f57fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60075481565b600a5481565b6000806106d862093a8042610c4690919063ffffffff16565b905080831115610750576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c69642074617267657400000000000000000000000000000000000081525060200191505060405180910390fd5b600061078660347f0000000000000000000000000000000000000000000000000000000000000000610e2290919063ffffffff16565b90506000818310156107b8577f00000000000000000000000000000000000000000000000000000000000000006107cd565b6107cc603484610eaa90919063ffffffff16565b5b90506000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600601549050600082600201549050600084831061084657610841600184610e2290919063ffffffff16565b610848565b845b90505b8681116108ec576000600460008381526020019081526020016000209050600061087a60028360020154610c90565b9050600061088f876001018460020154610c90565b90506108cc6108bd836108af848760010154610ef490919063ffffffff16565b610c4690919063ffffffff16565b86610e2290919063ffffffff16565b94505050506108e5600182610e2290919063ffffffff16565b905061084b565b508486106109d157600085831061091657610911600184610e2290919063ffffffff16565b610918565b855b90505b8681116109cf5760006004600061093c603485610eaa90919063ffffffff16565b81526020019081526020016000209050600061095d60028360020154610c90565b90506000610972876001018460020154610c90565b90506109af6109a083610992848760010154610ef490919063ffffffff16565b610c4690919063ffffffff16565b86610eaa90919063ffffffff16565b94505050506109c8600182610e2290919063ffffffff16565b905061091b565b505b80965050505050505092915050565b60006109ec43836105cb565b9050919050565b60055481565b6000610a044361066e565b905090565b60065481565b6000610a1c600283610c90565b9050919050565b60016020528060005260406000206000915090508060000154908060020154908060030154908060040154908060060154905085565b60046000610a7362093a8042610c4690919063ffffffff16565b815260200190815260200160002060000160009054906101000a900460ff16610a9f57610a9e610f7a565b5b60003073ffffffffffffffffffffffffffffffffffffffff16635489757784846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d6020811015610b3a57600080fd5b8101908080519060200190929190505050905080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060181905550505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b603481565b60095481565b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154905083565b6000610c8883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506112ff565b905092915050565b60008083805490501415610ca75760009050610e1c565b82610cc060018580549050610eaa90919063ffffffff16565b81548110610cca57fe5b9060005260206000209060020201600001548210610d1e5782610cfb60018580549050610eaa90919063ffffffff16565b81548110610d0557fe5b9060005260206000209060020201600101549050610e1c565b82600081548110610d2b57fe5b906000526020600020906002020160000154821015610d4d5760009050610e1c565b600080610d6860018680549050610eaa90919063ffffffff16565b90505b81811115610df9576000610dae6002610da06001610d928787610e2290919063ffffffff16565b610e2290919063ffffffff16565b610c4690919063ffffffff16565b905084868281548110610dbd57fe5b90600052602060002090600202016000015411610ddc57809250610df3565b610df0600182610eaa90919063ffffffff16565b91505b50610d6b565b848281548110610e0557fe5b906000526020600020906002020160010154925050505b92915050565b600080828401905083811015610ea0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000610eec83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113c5565b905092915050565b600080831415610f075760009050610f74565b6000828402905082848281610f1857fe5b0414610f6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116306021913960400191505060405180910390fd5b809150505b92915050565b610f82611485565b6000610f8e600361161c565b90506000610fd06305f5e100610fc26034610fb4600a5487610ef490919063ffffffff16565b610c4690919063ffffffff16565b610c4690919063ffffffff16565b90506000610fea62093a8042610c4690919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bbb30c5d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561107357600080fd5b505afa158015611087573d6000803e3d6000fd5b505050506040513d602081101561109d57600080fd5b81019080805190602001909291905050506110ba575050506112fd565b60008214156110cb575050506112fd565b6000600190505b6004600083815260200190815260200160002060000160009054906101000a900460ff166112f8576040518060600160405280600115158152602001848152602001438152506004600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010155604082015181600201559050506003604051806040016040528043815260200161119a61118b8588610ef490919063ffffffff16565b88610e2290919063ffffffff16565b81525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561126d57600080fd5b505af1158015611281573d6000803e3d6000fd5b50505050817fce8f0c0868b3497f8bb005e8ee9d6f967e32053f5290e2c1c3390e106b92cde484600a54604051808381526020018281526020019250505060405180910390a26112db600183610eaa90919063ffffffff16565b91506112f1600182610e2290919063ffffffff16565b90506110d2565b505050505b565b600080831182906113ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611370578082015181840152602081019050611355565b50505050905090810190601f16801561139d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816113b757fe5b049050809150509392505050565b6000838311158290611472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561143757808201518184015260208101905061141c565b50505050905090810190601f1680156114645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000600754141561149e57600554600a8190555061161a565b60006114aa600361161c565b9050600060075482106114d1576114cc60075483610eaa90919063ffffffff16565b6114e7565b6114e682600754610eaa90919063ffffffff16565b5b905060006115166007546115086305f5e10085610ef490919063ffffffff16565b610c4690919063ffffffff16565b90506000611544620f424061153660085485610ef490919063ffffffff16565b610c4690919063ffffffff16565b905060006007548510611597576115926305f5e100611584611573856305f5e100610eaa90919063ffffffff16565b600a54610ef490919063ffffffff16565b610c4690919063ffffffff16565b6115d9565b6115d86305f5e1006115ca6115b9856305f5e100610e2290919063ffffffff16565b600a54610ef490919063ffffffff16565b610c4690919063ffffffff16565b5b90506005548110156115f357600554600a81905550611614565b60065481111561160b57600654600a81905550611613565b80600a819055505b5b50505050505b565b60006116288243610c90565b905091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220e387123eebdd04ee5621cb99464fc8dab1a95b97550fbb691cc3f417bbc4bd8564736f6c634300060c0033";
