/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StateUtils } from "../StateUtils";

export class StateUtils__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(api3TokenAddress: string, overrides?: Overrides): Promise<StateUtils> {
    return super.deploy(
      api3TokenAddress,
      overrides || {}
    ) as Promise<StateUtils>;
  }
  getDeployTransaction(
    api3TokenAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(api3TokenAddress, overrides || {});
  }
  attach(address: string): StateUtils {
    return super.attach(address) as StateUtils;
  }
  connect(signer: Signer): StateUtils__factory {
    return super.connect(signer) as StateUtils__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StateUtils {
    return new Contract(address, _abi, signerOrProvider) as StateUtils;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "api3TokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimReleaseReferenceBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimReleases",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locks",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minApr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardEpochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPaidForEpoch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardReleases",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardVestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeTarget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "updateAndGetBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
    ],
    name: "updateAndGetBalanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateCoeff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "targetBlock",
        type: "uint256",
      },
    ],
    name: "updateUserState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "unstaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "locked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStateUpdateTargetBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeScheduledAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unstakeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052622503f660809081525062093a8060a090815250622625a060085563047868c06009556a084595161401484a000000600a55620f4240600b55600854600f5534801561004f57600080fd5b506040516119773803806119778339818101604052602081101561007257600080fd5b8101908080519060200190929190505050600260405180604001604052804381526020016001815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600360405180604001604052804381526020016001815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060805160a0516117ce6101a9600039806107c2528061080a5280611224525080610c375280610fcc528061149152506117ce6000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c806362bc7855116100b8578063a87430ba1161007c578063a87430ba146104fd578063ca09304714610571578063decac4f5146105b3578063ee677b36146105d1578063eebb198014610633578063f4dadc611461067c57610141565b806362bc7855146103cf57806370a0823114610411578063784b3c5d1461046957806392093b3614610487578063a09862d5146104a557610141565b80632eebce2c1161010a5780632eebce2c1461027157806339a288bd146102bf57806341cb8c20146103085780634eb05c47146103515780634f322ae81461036f578063587809381461038d57610141565b806201e8621461014657806310664413146101a857806313f2dad0146101c657806320a0a0e91461020f5780632dd5090c1461022d575b600080fd5b6101926004803603604081101561015c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c5565b6040518082815260200191505060405180910390f35b6101b0610789565b6040518082815260200191505060405180910390f35b6101f2600480360360208110156101dc57600080fd5b810190808035906020019092919050505061078f565b604051808381526020018281526020019250505060405180910390f35b6102176107c0565b6040518082815260200191505060405180910390f35b6102596004803603602081101561024357600080fd5b81019080803590602001909291905050506107e4565b60405180821515815260200191505060405180910390f35b6102bd6004803603604081101561028757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610804565b005b6102eb600480360360208110156102d557600080fd5b8101908080359060200190929190505050610d62565b604051808381526020018281526020019250505060405180910390f35b6103346004803603602081101561031e57600080fd5b8101908080359060200190929190505050610d93565b604051808381526020018281526020019250505060405180910390f35b610359610dc4565b6040518082815260200191505060405180910390f35b610377610dca565b6040518082815260200191505060405180910390f35b6103b9600480360360208110156103a357600080fd5b8101908080359060200190929190505050610dd0565b6040518082815260200191505060405180910390f35b6103fb600480360360208110156103e557600080fd5b8101908080359060200190929190505050610df1565b6040518082815260200191505060405180910390f35b6104536004803603602081101561042757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e09565b6040518082815260200191505060405180910390f35b610471610ebb565b6040518082815260200191505060405180910390f35b61048f610ec1565b6040518082815260200191505060405180910390f35b6104e7600480360360208110156104bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec7565b6040518082815260200191505060405180910390f35b61053f6004803603602081101561051357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7c565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b61059d6004803603602081101561058757600080fd5b8101908080359060200190929190505050610fb2565b6040518082815260200191505060405180910390f35b6105bb610fca565b6040518082815260200191505060405180910390f35b61061d600480360360408110156105e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fee565b6040518082815260200191505060405180910390f35b61065f6004803603602081101561064957600080fd5b81019080803590602001909291905050506110b7565b604051808381526020018281526020019250505060405180910390f35b6106a86004803603602081101561069257600080fd5b81019080803590602001909291905050506110e8565b604051808381526020018281526020019250505060405180910390f35b60008061077d600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b828210156107735783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061072d565b5050505085611119565b90508091505092915050565b600b5481565b6002818154811061079c57fe5b90600052602060002090600202016000915090508060000154908060010154905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b600c6020528060005260406000206000915054906101000a900460ff1681565b600c60007f0000000000000000000000000000000000000000000000000000000000000000428161083157fe5b04815260200190815260200160002060009054906101000a900460ff1661085b5761085a611218565b5b610863611748565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610922578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906108dc565b50505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152505090506000610964826020015143611119565b9050600082604001519050600083606001519050600081141561098657600190505b60606002805480602002602001604051908101604052809291908181526020016000905b828210156109f0578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906109aa565b50505050905060006004805490501115610b4b5760606004805480602002602001604051908101604052809291908181526020016000905b82821015610a6e57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610a28565b505050509050600081600081518110610a8357fe5b6020026020010151600001516001850310610aad576001610aa783600187036115a9565b01610ab0565b60005b90505b815181108015610ad9575087828281518110610acb57fe5b602002602001015160000151105b15610b4857610ae661177e565b828281518110610af257fe5b602002602001015190506000610b0c858360000151611119565b90506000610b228a602001518460000151611119565b9050818184602001510281610b3357fe5b04880197505050508080600101915050610ab3565b50505b60006005805490501115610ccb5760606005805480602002602001604051908101604052809291908181526020016000905b82821015610bc357838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610b7d565b505050509050600081600081518110610bd857fe5b6020026020010151600001516001850310610c02576001610bfc83600187036115a9565b01610c05565b60005b90505b815181108015610c2e575087828281518110610c2057fe5b602002602001015160000151105b15610cc85760007f0000000000000000000000000000000000000000000000000000000000000000838381518110610c6257fe5b6020026020010151600001510390506000610c7d8583611119565b90506000610c8f8a6020015184611119565b90508181868681518110610c9f57fe5b6020026020010151602001510281610cb357fe5b04880397505050508080600101915050610c08565b50505b82600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555085600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050505050505050565b60058181548110610d6f57fe5b90600052602060002090600202016000915090508060000154908060010154905082565b60038181548110610da057fe5b90600052602060002090600202016000915090508060000154908060010154905082565b600a5481565b600f5481565b60078181548110610ddd57fe5b906000526020600020016000915090505481565b600e6020528060005260406000206000915090505481565b60003073ffffffffffffffffffffffffffffffffffffffff166201e86243846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610e7957600080fd5b505afa158015610e8d573d6000803e3d6000fd5b505050506040513d6020811015610ea357600080fd5b81019080805190602001909291905050509050919050565b60085481565b60095481565b60003073ffffffffffffffffffffffffffffffffffffffff1663ee677b3683436040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610f3a57600080fd5b505af1158015610f4e573d6000803e3d6000fd5b505050506040513d6020811015610f6457600080fd5b81019080805190602001909291905050509050919050565b60016020528060005260406000206000915090508060000154908060020154908060030154908060040154908060050154905085565b600d6020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610ffa8383610804565b6110af600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b828210156110a55783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061105f565b5050505083611119565b905092915050565b600681815481106110c457fe5b90600052602060002090600202016000915090508060000154908060010154905082565b600481815481106110f557fe5b90600052602060002090600202016000915090508060000154908060010154905082565b6000808351141561112d5760009050611212565b8260018451038151811061113d57fe5b6020026020010151600001518210611172578260018451038151811061115f57fe5b6020026020010151602001519050611212565b8260008151811061117f57fe5b60200260200101516000015182101561119b5760009050611212565b600080600185510390505b818111156111f55760006002600184840101816111bf57fe5b049050848682815181106111cf57fe5b602002602001015160000151116111e8578092506111ef565b6001810391505b506111a6565b84828151811061120157fe5b602002602001015160200151925050505b92915050565b61122061163f565b60007f0000000000000000000000000000000000000000000000000000000000000000428161124b57fe5b049050600060036001600380549050038154811061126557fe5b906000526020600020906002020160010154905060006305f5e1006034600f5484028161128e57fe5b048161129657fe5b0490506001600c600085815260200190815260200160002060006101000a81548160ff02191690831515021790555043600e60008581526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bbb30c5d306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561136457600080fd5b505afa158015611378573d6000803e3d6000fd5b505050506040513d602081101561138e57600080fd5b81019080805190602001909291905050506113ab575050506115a7565b60008114156113bc575050506115a7565b80600d600085815260200190815260200160002081905550600360405180604001604052804381526020018385018152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550506004604051806040016040528043815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050600560405180604001604052807f0000000000000000000000000000000000000000000000000000000000000000430181526020018381525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561158b57600080fd5b505af115801561159f573d6000803e3d6000fd5b505050505050505b565b6000826001845103815181106115bb57fe5b60200260200101516000015182106115d95760018351039050611639565b600080600185510390505b818111156116335760006002600184840101816115fd57fe5b0490508486828151811061160d57fe5b602002602001015160000151116116265780925061162d565b6001810391505b506115e4565b81925050505b92915050565b6000600a54141561165857600854600f81905550611746565b600060036001600380549050038154811061166f57fe5b90600052602060002090600202016001015490506000600a54821061169857600a54820361169e565b81600a54035b90506000600a546305f5e1008302816116b357fe5b0490506000620f4240600b548302816116c857fe5b049050600a5484106116f1576305f5e100816305f5e10003600f5402816116eb57fe5b0461170a565b6305f5e100816305f5e10001600f54028161170857fe5b045b600f81905550600854600f54101561172a57600854600f81905550611741565b600954600f54111561174057600954600f819055505b5b505050505b565b6040518060c001604052806000815260200160608152602001600081526020016000815260200160008152602001600081525090565b60405180604001604052806000815260200160008152509056fea26469706673582212201e237b88ede44141ca544567a73df2307094c7020ac40ae03990befa4e57a95864736f6c634300060c0033";
